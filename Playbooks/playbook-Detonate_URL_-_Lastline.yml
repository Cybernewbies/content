id: Detonate URL - Lastline
version: -1
name: Detonate URL - Lastline
fromversion: 4.0.0
description: Detonates a URL using the Lastline sandbox integration.
starttaskid: "0"
tasks:
  "0":
    id: "0"
    taskid: 703b80c2-e281-498a-8d00-2bbf1e6f2df0
    type: start
    task:
      id: 703b80c2-e281-498a-8d00-2bbf1e6f2df0
      version: -1
      name: ""
      description: ""
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "9"
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 275,
          "y": 50
        }
      }
    note: false
  "1":
    id: "1"
    taskid: 8adc1b63-514e-47bc-87e5-7d1a676d19ac
    type: regular
    task:
      id: 8adc1b63-514e-47bc-87e5-7d1a676d19ac
      version: -1
      name: Lastline Upload URL
      description: Uploads the submission to Latline.
      script: Lastline|||lastline-upload-url
      type: regular
      iscommand: true
      brand: Lastline
    nexttasks:
      '#none#':
      - "2"
    scriptarguments:
      pushToPortal: {}
      threshold: {}
      url:
        complex:
          root: inputs.URL
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 545
        }
      }
    note: false
  "2":
    id: "2"
    taskid: d71c2b83-4d1c-46c2-8dcd-cd697b6dba10
    type: playbook
    task:
      id: d71c2b83-4d1c-46c2-8dcd-cd697b6dba10
      version: -1
      name: GenericPolling
      description: |-
        Use as a sub-playbook to block execution of the master playbook until a remote action is complete.
        This playbook implements polling by continually running the command in Step #2 until the operation completes.
        The remote action should have the following structure:

        1. Initiate the operation.
        2. Poll to check if the operation completed.
        3. (optional) Get the results of the operation.
      playbookName: GenericPolling
      type: playbook
      iscommand: false
      brand: ""
    nexttasks:
      '#none#':
      - "3"
    scriptarguments:
      Ids:
        complex:
          root: Lastline
          accessor: Submission.uuid
      Interval:
        complex:
          root: inputs.Interval
      PollingCommandArgName:
        simple: uuid
      PollingCommandName:
        simple: lastline-get-report
      Timeout:
        complex:
          root: inputs.Timeout
      dt:
        simple: Lastline.Submission(val.status != 'Completed')
    separatecontext: true
    loop:
      iscommand: false
      exitCondition: ""
      wait: 1
    view: |-
      {
        "position": {
          "x": 50,
          "y": 720
        }
      }
    note: false
  "3":
    id: "3"
    taskid: d401f915-5858-4733-84e1-88c734ff94fd
    type: regular
    task:
      id: d401f915-5858-4733-84e1-88c734ff94fd
      version: -1
      name: Lastline Get Report
      description: Retrieve the reports from Lastline.
      script: Lastline|||lastline-get-report
      type: regular
      iscommand: true
      brand: Lastline
    nexttasks:
      '#none#':
      - "6"
    scriptarguments:
      threshold: {}
      uuid:
        complex:
          root: Lastline
          accessor: Submission.uuid
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 50,
          "y": 895
        }
      }
    note: false
  "5":
    id: "5"
    taskid: 9cf17ba9-0559-471e-8012-1abbd588a590
    type: condition
    task:
      id: 9cf17ba9-0559-471e-8012-1abbd588a590
      version: -1
      name: Is there a URL to detonate?
      description: Checks that there is a URL in the playbookâ€™s input.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "1"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              simple: inputs.URL
            iscontext: true
    view: |-
      {
        "position": {
          "x": 162.5,
          "y": 370
        }
      }
    note: false
  "6":
    id: "6"
    taskid: 686f6312-301b-461a-877c-6e4ec794393f
    type: title
    task:
      id: 686f6312-301b-461a-877c-6e4ec794393f
      version: -1
      name: Done
      description: ""
      type: title
      iscommand: false
      brand: ""
    separatecontext: false
    view: |-
      {
        "position": {
          "x": 275,
          "y": 1070
        }
      }
    note: false
  "9":
    id: "9"
    taskid: 5305d933-86c0-46b2-8889-9c675f21f978
    type: condition
    task:
      id: 5305d933-86c0-46b2-8889-9c675f21f978
      version: -1
      name: Is Lastline sandbox enabled?
      description: |
        Verify that there is a valid instance of Lastline enabled.
      type: condition
      iscommand: false
      brand: ""
    nexttasks:
      '#default#':
      - "6"
      "yes":
      - "5"
    separatecontext: false
    conditions:
    - label: "yes"
      condition:
      - - operator: isExists
          left:
            value:
              complex:
                root: modules
                filters:
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.brand
                      iscontext: true
                    right:
                      value:
                        simple: Lastline
                - - operator: isEqualString
                    left:
                      value:
                        simple: modules.state
                      iscontext: true
                    right:
                      value:
                        simple: active
                accessor: brand
            iscontext: true
    view: |-
      {
        "position": {
          "x": 275,
          "y": 195
        }
      }
    note: false
view: |-
  {
    "linkLabelsPosition": {},
    "paper": {
      "dimensions": {
        "height": 1085,
        "width": 605,
        "x": 50,
        "y": 50
      }
    }
  }
inputs:
- key: URL
  value:
    complex:
      root: URL
      accessor: Data
  required: false
  description: URL to detonate.
- key: Interval
  value:
    simple: "1"
  required: false
  description: Polling frequency - how often the polling command should run (minutes)
- key: Timeout
  value:
    simple: "15"
  required: false
  description: How much time to wait before a timeout occurs (minutes)
outputs:
- contextPath: File.Size
  description: File size (only in case of report type=json)
  type: number
- contextPath: DBotScore.Indicator
  description: The indicator we tested (only in case of report type=json)
  type: string
- contextPath: DBotScore.Vendor
  description: Vendor used to calculate the score (only in case of report type=json)
  type: string
- contextPath: DBotScore.Score
  description: The actual score (only in case of report type=json)
  type: number
- contextPath: IP.Address
  description: IP's relevant to the sample
  type: string
- contextPath: DBotScore.Type
  description: The type of the indicator (only in case of report type=json)
  type: string
- contextPath: File.Name
  description: Filename (only in case of report type=json)
  type: string
- contextPath: File.Type
  description: File type e.g. "PE" (only in case of report type=json)
  type: string
- contextPath: File.MD5
  description: MD5 hash of the file (only in case of report type=json)
  type: string
- contextPath: File.SHA1
  description: SHA1 hash of the file (only in case of report type=json)
  type: string
- contextPath: File.SHA256
  description: SHA256 hash of the file (only in case of report type=json)
  type: string
- contextPath: File.EntryID
  description: The Entry ID of the sample
  type: string
- contextPath: File.Malicious.Vendor
  description: For malicious files, the vendor that made the decision
  type: string
- contextPath: File.Malicious.Description
  description: For malicious files, the reason for the vendor to make the decision
  type: string
releaseNotes: new detonate playbook using the pooling mechanism.